{"version":3,"sources":["Components/Login.js","Components/Planner/WorkerTicket.js","Components/Planner/WorkersBox.js","Components/Planner/Post.js","Components/Planner/Day.js","Components/Planner/Planner.js","Components/Personal/Personal.js","Components/History/Gistory.js","Components/SetPlan/SetPlan.js","App.js","serviceWorker.js","index.js"],"names":["Login","to","Component","WorkerTicket","drag","ev","console","log","props","workerDB3","i1","dataTransfer","setData","id","draging","markerDiv","document","getElementById","remove","this","className","style","borderColor","color","draggable","onDragStart","onDrag","name","WorkersBox","workerDB2","map","e","i","key","Post","allowDrop","preventDefault","pageX","createElement","height","width","border","position","left","zIndex","dayInd2","postInd1","appendChild","drop","shiftSet3","shifts","onDragOver","onDrop","Day","shiftSet2","dayInd1","postInd","Planner","workerDB1","shiftSet1","dayInd","Presonal","History","SetPlan","App","state","shiftSet","shiftsDB","workerDB","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.14413b0a.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class Login extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                Login\r\n\r\n                <div>\r\n                    <Link to='/planner'>\r\n                        <button>log in</button>\r\n                    </Link>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class WorkerTicket extends Component {\r\n\r\n    drag = (ev) => {\r\n\r\n        console.log(this.props.workerDB3[this.props.i1])\r\n\r\n        //getting the index from the workerDV\r\n        ev.dataTransfer.setData(\"src\", this.props.workerDB3[this.props.i1].id);\r\n\r\n\r\n    }\r\n\r\n    draging = (ev) => {\r\n\r\n        //    console.log(ev.pageX);\r\n        //    console.log(ev.target);\r\n\r\n        var markerDiv = document.getElementById('markerDiv')\r\n\r\n        if (markerDiv !== null) {\r\n\r\n            markerDiv.remove()\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id={`ticket${this.props.i1}`}\r\n                className='ticketDiv'\r\n                style={{ borderColor: `${this.props.workerDB3[this.props.i1].color}` }}\r\n                draggable='true'\r\n                onDragStart={this.drag}\r\n                onDrag={this.draging}\r\n            >\r\n\r\n\r\n                {this.props.workerDB3[this.props.i1].name}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport WorkerTicket from './WorkerTicket'\r\n\r\nexport default class WorkersBox extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                {this.props.workerDB2.map((e,i)=>{\r\n                    return (\r\n                        <WorkerTicket\r\n                        key={i} \r\n                        workerDB3={this.props.workerDB2}\r\n                        i1={i}\r\n                        />\r\n                    )\r\n                })}\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n//import ShiftMarker from './ShiftMarker';\r\n\r\nexport default class Post extends Component {\r\n\r\n    allowDrop = (ev) => {\r\n\r\n        ev.preventDefault();\r\n        //console.log(ev.target);\r\n        console.log(ev.pageX);\r\n\r\n        //return <ShiftMarker />\r\n\r\n        //var shiftDiv = <ShiftMarker />\r\n        var markerDivExist = document.getElementById('markerDiv')\r\n\r\n        if (markerDivExist === null) {\r\n\r\n            var markerDiv = document.createElement('div')\r\n            markerDiv.id = 'markerDiv'\r\n            markerDiv.style.height = '10px'\r\n            markerDiv.style.width = '10px'\r\n            markerDiv.style.border = '1px solid red'\r\n            markerDiv.style.position = 'relative'\r\n            markerDiv.style.left = `${ev.pageX-200}px`\r\n            markerDiv.style.zIndex = '-1'\r\n\r\n            //console.log(markerDiv);\r\n\r\n            document.getElementById(`dropDay${this.props.dayInd2}post${this.props.postInd1}`).appendChild(markerDiv)\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    drop = (ev) => {\r\n\r\n        ev.preventDefault();\r\n\r\n        //console.log(ev.target);\r\n\r\n        //let src = ev.dataTransfer.getData(\"src\");\r\n\r\n        // console.log('src ' + src);\r\n\r\n        // console.log('day ' + this.props.dayInd2);\r\n\r\n        // console.log('post ' + this.props.postInd1);\r\n\r\n        // console.log('x ' + ev.pageX);\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <div className='postBodyDiv'>\r\n\r\n                    <div>{this.props.shiftSet3[this.props.dayInd2].shifts[this.props.postInd1].name}</div>\r\n\r\n                    <div className='dropAreaDiv'\r\n                        id={`dropDay${this.props.dayInd2}post${this.props.postInd1}`}\r\n                        onDragOver={this.allowDrop}\r\n                        onDrop={this.drop}\r\n                    >\r\n\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Post from './Post'\r\n\r\nexport default class Day extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <div className='dayBodyDiv'>\r\n\r\n                    <div className='dayNameDiv'>\r\n                        {this.props.shiftSet2[this.props.dayInd1].name}\r\n                    </div>\r\n\r\n                    <div>\r\n                        {this.props.shiftSet2[this.props.dayInd1].shifts.map((e, postInd) => {\r\n                            return (\r\n                                <Post\r\n                                    key={postInd}\r\n                                    shiftSet3={this.props.shiftSet2}\r\n                                    postInd1={postInd}\r\n                                    dayInd2={this.props.dayInd1}\r\n\r\n                                />\r\n                            )\r\n                        })}\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport WorkersBox from './WorkersBox'\r\nimport Day from './Day';\r\n\r\nexport default class Planner extends Component {\r\n\r\n\r\n    \r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <div id='plnWrkBox'>\r\n\r\n\r\n\r\n\r\n                    <div>\r\n                        <WorkersBox\r\n                            workerDB2={this.props.workerDB1}\r\n                        />\r\n                    </div>\r\n\r\n                    <div id='plannerDiv'\r\n                       \r\n\r\n                    >\r\n                        {this.props.shiftSet1.map((e, dayInd) => {\r\n                            return (\r\n                                <Day\r\n                                    key={dayInd}\r\n                                    shiftSet2={this.props.shiftSet1}\r\n                                    dayInd1={dayInd}\r\n                                />\r\n                            )\r\n                        })}\r\n\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Presonal extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                Presonal\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class History extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                History\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class SetPlan extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                SetPlan\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\nimport { HashRouter as Router, Switch, Route} from 'react-router-dom'\nimport './App.css';\nimport Login from './Components/Login.js'\nimport Planner from './Components/Planner/Planner.js'\nimport Personal from './Components/Personal/Personal.js'\nimport Gistory from './Components/History/Gistory.js'\nimport SetPlan from './Components/SetPlan/SetPlan.js'\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n\n      shiftSet: [\n        {name: 'Su', shifts: [{name: 'post1'},{name: 'post2'},{name: 'post3'}]}, \n        {name: 'Mo', shifts: [{name: 'post6'},{name: 'post7'},{name: 'post8'}]}, \n        {name: 'Tu', shifts: [{name: 'post1'},{name: 'post2'},{name: 'post3'}]}, \n        {name: 'We', shifts: [{name: 'post1'},{name: 'post2'},{name: 'post3'}]}, \n        {name: 'Th', shifts: [{name: 'post1'},{name: 'post2'},{name: 'post3'}]},\n        {name: 'Fr', shifts: [{name: 'post1'},{name: 'post2'},{name: 'post3'}]},\n        {name: 'Sa', shifts: [{name: 'post1'},{name: 'post2'},{name: 'post3'}]},\n      ],\n\n      shiftsDB: [],\n\n      workerDB: [\n        { id: 0, name: 'Amir', color: '#ff0000' },\n        { id: 1, name: 'Nadav', color: '#00aa00' },\n        { id: 2, name: 'David', color: '#0000ff' },\n      ],\n\n    }\n  }\n\n\n\n\n  render() {\n    return (\n      <div>\n\n        weekly planner\n\n        <Router>\n\n          <Switch>\n\n            <Route exact path='/' component={() => {\n              return <Login\n\n              />\n            }} />\n            <Route exact path='/planner' component={() => {\n              return <Planner\n                workerDB1={this.state.workerDB}\n                shiftSet1={this.state.shiftSet}\n              />\n            }} />\n            <Route exact path='/personal' component={() => {\n              return <Personal\n\n              />\n            }} />\n            <Route exact path='/history' component={() => {\n              return <Gistory\n\n              />\n            }} />\n            <Route exact path='/setplanner' component={() => {\n              return <SetPlan\n\n              />\n            }} />\n\n\n          </Switch>\n\n        </Router>\n\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}